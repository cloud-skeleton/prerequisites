acl {
  enabled = true
}

{% if 'manager' not in group_names %}
client {
  artifact {
    decompression_file_count_limit = 10000
    decompression_size_limit = "10G"
    http_max_size = "5G"
  }

  // @TODO: Not yet sure if needed
  // bridge_network_hairpin_mode = true
  bridge_network_subnet = "{{ nomad_cluster_bridge_network_cidr }}"

  drain_on_shutdown {
    deadline = "{{ nomad_client_drain_max_time }}"
  }

  enabled = true
  node_class = "{{ group_names[0] | replace('_','-') }}"
  max_kill_timeout = "1m"

  meta {
    eu.cloudskeleton.node = true
  }

  options = {
    driver.allowlist = "docker"
  }

  reserved {
    cpu = 400
    disk = 4096
    memory = 512
    reserved_ports = "22"
  }

  server_join {
    retry_join = [
      {% for host in groups['manager'] %}
      "{{ host }}"{% if not loop.last %},{% endif %}

      {% endfor %}
    ]
  }
}
{% endif %}

// @TODO: Once consul is installed check this stanza
// consul {
// }

data_dir  = "/opt/nomad/data"
datacenter = "{{ nomad_main_datacenter_name }}"
disable_anonymous_signature = true
disable_update_check = true
enable_syslog = true
{% if 'manager' not in group_names %}
leave_on_interrupt = true
{% endif %}

{% if 'manager' in group_names %}
server {
  bootstrap_expect = {{ groups['manager'] | length }}
  enabled = true
  encrypt = "{{ nomad_encryption_string }}"
  // @TODO: investigate later
  // oidc_issuer = ""

  plan_rejection_tracker {
    enabled = true
  }

  server_join {
    retry_join = [
      {% for host in groups['manager'] %}
      "{{ host }}"{% if not loop.last %},{% endif %}

      {% endfor %}
    ]
  }
}
{% endif %}

tls {
  ca_file = "{{ certificate_files.ca_certificate }}"
  cert_file = "{{ certificate_files.server_certificate if 'manager' in group_names else certificate_files.client_certificate }}"
  http = true
  key_file = "{{ certificate_files.server_private_key if 'manager' in group_names else certificate_files.client_private_key }}"
  rpc = true
  verify_https_client = true
  verify_server_hostname = true
}
