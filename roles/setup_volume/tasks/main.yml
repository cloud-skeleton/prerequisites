---
- ansible.builtin.apt:
    autoclean: true
    autoremove: true
    clean: true
    install_recommends: true
    name:
      - cifs-utils
      - lsscsi
      - multipath-tools
      - nfs-common
      - open-iscsi
      - scsitools
      - sg3-utils
    state: latest
    update_cache: true
  name: Ensure CSI driver's dependencies are installed
  when: "'main_worker' in group_names"

- ansible.builtin.copy:
    content: |
      defaults {
        user_friendly_names yes
        find_multipaths yes
      }
    dest: /etc/multipath.conf
    group: root
    mode: '0640'
    owner: root
  name: Enable multipathing
  when: "'main_worker' in group_names"

- ansible.builtin.systemd_service:
    daemon_reload: true
    enabled: true
    name: open-iscsi
    state: started
  name: Start open-iscsi service
  when: "'main_worker' in group_names"

- ansible.builtin.command:
    cmd: nomad namespace apply -description "System resources" system
  changed_when: false
  environment:
    NOMAD_ADDR: https://localhost:4646
    NOMAD_CACERT: /etc/nomad.d/certs/nomad-agent-ca.pem
    NOMAD_CLIENT_CERT: /etc/nomad.d/certs/global-cli-nomad.pem
    NOMAD_CLIENT_KEY: /etc/nomad.d/certs/global-cli-nomad-key.pem
    NOMAD_TOKEN: "{{ nomad_server_token }}"
  name: Create Nomad "system" namespace
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.template:
    dest: /tmp/csi.nomad
    group: nomad
    lstrip_blocks: true
    mode: '0640'
    owner: nomad
    src: csi.nomad.j2
    trim_blocks: true
  changed_when: false
  name: Render Nomad CSI node job file
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.command:
    cmd: nomad job plan -namespace=system /tmp/csi.nomad
  changed_when: plan_csi_job.stdout.startswith("+/-")
  environment:
    NOMAD_ADDR: https://localhost:4646
    NOMAD_CACERT: /etc/nomad.d/certs/nomad-agent-ca.pem
    NOMAD_CLIENT_CERT: /etc/nomad.d/certs/global-cli-nomad.pem
    NOMAD_CLIENT_KEY: /etc/nomad.d/certs/global-cli-nomad-key.pem
    NOMAD_TOKEN: "{{ nomad_server_token }}"
  failed_when: plan_csi_job.rc == 255
  name: Plan Nomad CSI node job deployment
  register: plan_csi_job
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.command:
    cmd: nomad job run -namespace=system /tmp/csi.nomad
  changed_when: plan_csi_job.changed
  environment:
    NOMAD_ADDR: https://localhost:4646
    NOMAD_CACERT: /etc/nomad.d/certs/nomad-agent-ca.pem
    NOMAD_CLIENT_CERT: /etc/nomad.d/certs/global-cli-nomad.pem
    NOMAD_CLIENT_KEY: /etc/nomad.d/certs/global-cli-nomad-key.pem
    NOMAD_TOKEN: "{{ nomad_server_token }}"
  name: Deploy Nomad CSI node job
  register: deploy_csi_job
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.file:
    path: /tmp/csi.nomad
    state: absent
  changed_when: false
  name: Remove Nomad CSI node job file
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.command:
    cmd: nomad job status -namespace=system -json csi-plugin
  changed_when: false
  delay: 10
  environment:
    NOMAD_ADDR: https://localhost:4646
    NOMAD_CACERT: /etc/nomad.d/certs/nomad-agent-ca.pem
    NOMAD_CLIENT_CERT: /etc/nomad.d/certs/global-cli-nomad.pem
    NOMAD_CLIENT_KEY: /etc/nomad.d/certs/global-cli-nomad-key.pem
    NOMAD_TOKEN: "{{ nomad_server_token }}"
  name: Wait for Nomad CSI node deployment
  register: csi_job_status
  retries: "{{ csi_plugin_timeout / 10 * 2 }}"
  until: (csi_job_status.stdout | from_json)[0].Allocations[0].TaskStates.plugin.Events[-1].Type == 'Plugin became healthy'
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.wait_for:
    timeout: 5
  name: Wait a few seconds for CSI plugin to be available
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.template:
    dest: /tmp/volume.nomad
    group: nomad
    lstrip_blocks: true
    mode: '0640'
    owner: nomad
    src: volume.nomad.j2
    trim_blocks: true
  changed_when: false
  name: Render Nomad CSI volume definition file
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.command:
    cmd: nomad volume create /tmp/volume.nomad
  changed_when: false
  environment:
    NOMAD_ADDR: https://localhost:4646
    NOMAD_CACERT: /etc/nomad.d/certs/nomad-agent-ca.pem
    NOMAD_CLIENT_CERT: /etc/nomad.d/certs/global-cli-nomad.pem
    NOMAD_CLIENT_KEY: /etc/nomad.d/certs/global-cli-nomad-key.pem
    NOMAD_TOKEN: "{{ nomad_server_token }}"
  name: Create or update Nomad CSI volume
  when: inventory_hostname == groups['manager'][0]

- ansible.builtin.file:
    path: /tmp/volume.nomad
    state: absent
  changed_when: false
  name: Remove Nomad CSI volume definition file
  when: inventory_hostname == groups['manager'][0]
...
